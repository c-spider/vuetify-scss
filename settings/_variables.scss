@import 'theme';
@import '../tools/helpers/all';

// ============================================================
// Vuetify variables
// ============================================================

$color-pack: true !default;
$values-use-rem: true !default; // If true, use rem in styles instead of px.

// Grid
// ============================================================
//@ material.io/guidelines/layout/responsive-ui.html#responsive-ui-breakpoints,
//* Desktop gets a 16dp reduction
$grid-breakpoints: (
    xs: 0,
    sm: 600px,
    md: 960px,
    lg: (1280px - 16px),
    xl: (1920px - 16px),
) !default;

$grid-gutter: rem(8px) !default;
$grid-columns: 12 !default;
$grid-gutters: (
    xs: $grid-gutter / 4,
    sm: $grid-gutter / 2,
    md: $grid-gutter,
    lg: $grid-gutter * 2,
    xl: $grid-gutter * 3,
) !default;

$container-max-widths: (
    md: map-get($grid-breakpoints, md),
    lg: map-get($grid-breakpoints, lg),
    xl: map-get($grid-breakpoints, xl),
) !default;

// Display
// ============================================================
// stylelint-disable max-line-length
$display-breakpoints: (
    xs-only: 'only screen and (max-width: #{(map-get($grid-breakpoints, sm) - 1)})',
    sm-only:
        'only screen and (min-width: #{map-get($grid-breakpoints, sm)}) and (max-width: #{(map-get($grid-breakpoints, md)  - 1)})',
    sm-and-down: 'only screen and (max-width: #{(map-get($grid-breakpoints, md) - 1)})',
    sm-and-up: 'only screen and (min-width: #{map-get($grid-breakpoints, sm)})',
    md-only:
        'only screen and (min-width: #{map-get($grid-breakpoints, md)}) and (max-width: #{(map-get($grid-breakpoints, lg)  - 1)})',
    md-and-down: 'only screen and (max-width: #{(map-get($grid-breakpoints, lg) - 1)})',
    md-and-up: 'only screen and (min-width: #{map-get($grid-breakpoints, md)})',
    lg-only:
        'only screen and (min-width: #{map-get($grid-breakpoints, lg)}) and (max-width: #{(map-get($grid-breakpoints, xl) - 1)})',
    lg-and-down: 'only screen and (max-width: #{(map-get($grid-breakpoints, xl) - 1)})',
    lg-and-up: 'only screen and (min-width: #{map-get($grid-breakpoints, lg)})',
    xl-only: 'only screen and (min-width: #{map-get($grid-breakpoints, xl)})',
) !default;
// stylelint-enable

// Spacing
// ============================================================
$spacer: rem(1rem) !default;
$spacer-x: $spacer !default;
$spacer-y: $spacer !default;
$spacers: (
    zero: (
        x: 0,
        y: 0,
    ),
    one: (
        x: $spacer-x * 0.25,
        y: $spacer-y * 0.25,
    ),
    two: (
        x: $spacer-x * 0.5,
        y: $spacer-y * 0.5,
    ),
    three: (
        x: $spacer-x,
        y: $spacer-y,
    ),
    four: (
        x: $spacer-x * 1.5,
        y: $spacer-y * 1.5,
    ),
    five: (
        x: $spacer-x * 3,
        y: $spacer-y * 3,
    ),
) !default;

$font-weights: (
    thin: 100,
    light: 300,
    regular: 400,
    medium: 500,
    bold: 700,
    black: 900,
) !default;

// Headings
// ============================================================
$heading-font-family: $body-font-family !default;
$heading-style-tags: true !default;
$headings: (
    h1: (
        size: 7rem,
        weight: 300,
        line-height: 1,
        letter-spacing: -0.04em,
        font-family: $heading-font-family,
    ),
    h2: (
        size: 3.5rem,
        weight: 400,
        line-height: 1.35,
        letter-spacing: -0.02em,
        font-family: $heading-font-family,
    ),
    h3: (
        size: 2.8125rem,
        weight: 400,
        line-height: 3rem,
        letter-spacing: normal,
        font-family: $heading-font-family,
    ),
    h4: (
        size: 2.125rem,
        weight: 400,
        line-height: 2.5rem,
        letter-spacing: normal,
        font-family: $heading-font-family,
    ),
    h5: (
        size: 1.5rem,
        weight: 400,
        line-height: 2rem,
        letter-spacing: normal,
        font-family: $heading-font-family,
    ),
    h6: (
        size: 1.25rem,
        weight: 500,
        line-height: 1,
        letter-spacing: 0.02em,
        font-family: $heading-font-family,
    ),
    subheading: (
        size: 1rem,
        weight: 400,
    ),
    body-2: (
        size: 0.875rem,
        weight: 500,
    ),
    body-1: (
        size: 0.875rem,
        weight: 400,
    ),
    caption: (
        size: 0.75rem,
        weight: 400,
    ),
    button: (
        size: 0.875rem,
        weight: 500,
    ),
) !default;

// Transitions
$transition: (
    fast-out-slow-in: cubic-bezier(0.4, 0, 0.2, 1),
    linear-out-slow-in: cubic-bezier(0, 0, 0.2, 1),
    fast-out-linear-in: cubic-bezier(0.4, 0, 1, 1),
    ease-in-out: cubic-bezier(0.4, 0, 0.6, 1),
    fast-in-fast-out: cubic-bezier(0.25, 0.8, 0.25, 1),
    swing: cubic-bezier(0.25, 0.8, 0.5, 1),
) !default;

$primary-transition: 0.3s map-get($transition, swing) !default;
$secondary-transition: 0.2s map-get($transition, ease-in-out) !default;

// Components
// ============================================================

// Alerts
$alert-color: inherit !default;
$alert-border-radius: 0 !default;
$alert-border-width: rem(4px 0 0 0) !default;
$alert-font-size: $body-font-size !default;
$alert-icon-color: rgba(map-get($material-light, fg-color), 0.3) !default;
$alert-icon-font-size: rem(24px) !default;
$alert-padding: rem(16px) !default;
$alert-margin: map-deep-get($spacers, one, y) auto !default;
$alert-outline-border-width: rem(1px) !default;
$alert-outline-border-style: solid !default;

// Badges
$badge-border-radius: 50% !default;
$badge-color: map-get($material-dark, fg-color) !default;
$badge-font-family: $body-font-family !default;
$badge-font-size: rem(14px) !default;
$badge-height: rem(22px) !default;
$badge-top: 0 !default;
$badge-right: 0 !default;
$badge-width: rem(22px) !default;

// Breadcrumbs
$breadcrumbs-flex: 0 1 auto !default;
$breadcrumbs-padding: rem(18px 12px) !default;
$breadcrumbs-even-child-padding: rem(0 12px) !default;
$breadcrumbs-item-font-size: rem(14px) !default;
$breadcrumbs-item-large-font-size: rem(16px) !default;
$breadcrumbs-margin: 0 !default;
$breadcrumbs-padding: rem(0 14px) !default;

// Buttons

// -> Base
$button-border-radius: rem(2px) !default;
$button-color: map-get($material-light, fg-color) !default;
$button-background-color: #999999 !default;
$button-height: rem(36px) !default;
$button-font-size: rem(14px) !default;
$button-font-weight: 500 !default;
$button-margin-y: rem(6px) !default;
$button-margin-x: rem(8px) !default;
$button-margin: $button-margin-y $button-margin-x !default;
$button-min-width: rem(88px) !default;
$button-small-padding: rem(0 8px) !default;
$button-padding: rem(0 16px) !default;
$button-large-padding: rem(0 32px) !default;
$button-text-transform: uppercase !default;

$button-small-height: rem(28px) !default;
$button-small-font-size: rem(13px) !default;

$button-large-height: rem(44px) !default;
$button-large-font-size: rem(15px) !default;

$button-floating-width: rem(56px) !default;
$button-floating-icon-height: rem(24px) !default;
$button-floating-icon-width: rem(24px) !default;
$button-floating-small-width: rem(40px) !default;
$button-floating-large-width: rem(72px) !default;
$button-floating-small-icon-width: rem(18px) !default;
$button-floating-large-icon-width: rem(30px) !default;

// Card
$card-border-radius: rem(2px) !default;

// Chip
$chip-border-radius: rem(28px) !default;
$chip-close-margin: rem(0 2px 0 8px) !default;
$chip-font-size: rem(13px) !default;
$chip-label-border-radius: $card-border-radius !default;
$chip-icon-font-size: rem(20px) !default;
$chip-padding: rem(0 12px) !default;
$chip-removeable-padding: rem(0 4px 0 12px) !default;
$chip-outline-background: transparent !important !default;
$chip-outline-color: map-get($grey, base) !default;
$chip-height: rem(32px) !default;
$chip-margin: rem(4px) !default;
$chip-small-height: rem(24px) !default;
$chip-small-font-size: rem(20px) !default;
$chip-icon-offset: rem(12px) !default;
$chip-icon-negative-offset: rem(-8px) !default;

// Collapsible
$expansion-panel-collapse-height: rem(48px) !default;
$collapsible-transition-height: 0.23s !default;

// Footer
$footer-height: rem(36px) !default;

// Lists
// -> List fonts and weights
$list-tile-font-size: map-deep-get(
    $headings,
    subheading,
    size
) !default; // 16px - the mdc scss uses subheading to configure like this
$list-tile-font-weight: map-deep-get($headings, subheading, weight) !default; // 400

$list-action-text-font-size: rem(12px) !default; // this is for the stacked actions
$list-action-text-font-color: map-get($grey, base) !default;

$list-sub-title-font-size: ($list-tile-font-size - rem(2px)) !default; // 14px

$subheader-height-font-size: ($list-tile-font-size - rem(2px)) !default; // 14px
$subheader-font-weight: map-get($font-weights, medium) !default; // 500

// -> List spacing
$list-left-padding: rem(16px) !default;
$list-right-padding: rem(16px) !default;
$list-top-padding: rem(8px) !default;
$list-bottom-padding: rem(8px) !default;

$list-item-right-margin: rem(56px) !default;
$list-item-left-padding: rem(72px) !default;
$list-item-avatar-triple-margin-top: rem(-18px) !default;
$list-item-single-height: rem(48px) !default;
$list-item-double-height: rem(72px) !default;
$list-item-triple-height: rem(88px) !default;
$list-item-avatar-single-height: rem(56px) !default;

$subheader-inset-margin: $list-item-right-margin !default;

// -> List dense overrides
$list-item-dense-font-size: ($list-tile-font-size - rem(3px)) !default; // 13px
$subheader-dense-font-size: $list-item-dense-font-size !default;
$list-item-dense-icon-font-size: rem(22px) !default;
$list-item-dense-avatar-triple-margin-top: rem(-14px) !default;
$list-item-dense-top-padding: $list-top-padding / 2 !default;
$list-item-dense-single-height: $list-item-single-height - rem(8px) !default; // 40px
$list-item-dense-double-height: $list-item-double-height - rem(12px) !default; // 60px
$list-item-dense-triple-height: $list-item-triple-height - rem(12px) !default; // 76px
// 48px the dense concept was to take avatars to a normal single item height
$list-item-dense-avatar-single-height: $list-item-single-height !default;
$list-item-dense-avatar-height: rem(38px) !default;
$list-dense-subheader-height: $list-item-dense-single-height !default;
// the subheader under a group menu
$list-dense-subheader-group-height: $list-dense-subheader-height !default;

// Pickers
$time-picker-number-font-size: rem(16px) !default;
$time-picker-indicator-size: rem(40px) !default;

// Toolbar
$toolbar-height: rem(56px) !default;
$toolbar-item-padding: rem(0 16px) !default;
$toolbar-padding-y: 0 !default;
$toolbar-padding-x: rem(16px) !default;

// Progress Circular
$progress-circular-rotate-animation: progress-circular-rotate 1.4s linear infinite !default;
$progress-circular-rotate-dash: progress-circular-dash 1.4s ease-in-out infinite !default;
$process-circular-intermediate-svg-transition: all 0.2s ease-in-out !default;
$progress-circular-underlay-stroke: rgba(map-get($material-light, fg-color), 0.1) !default;
$progress-circular-overlay-transition: all 0.6s ease-in-out !default;

// Navigation drawer
$navigation-drawer-item-font-size: rem(14px) !default;
$navigation-drawer-item-font-weight: map-get($font-weights, medium) !default;
$navigation-drawer-group-item-font-weight: map-get($font-weights, regular) !default;

// Snackbar
$snackbar-color: #ffffff !default;
$snackbar-background-color: #323232 !default;
$snackbar-corner-offset: rem(24px) !default;

// Tab
$tab-text-transform: uppercase !default;

// Inputs
$input-top-spacing: rem(16px) !default;
$text-field-active-label-height: rem(12px) !default;

// Timeline
$timeline-wedge-size: rem(10px) !default;
$timeline-dot-small-size: rem(24px) !default;
$timeline-dot-regular-size: rem(38px) !default;
$timeline-dot-large-size: rem(52px) !default;

$timeline-inner-dot-small-size: rem(18px) !default;
$timeline-inner-dot-small-margin: rem(3px) !default;
$timeline-inner-dot-regular-size: rem(30px) !default;
$timeline-inner-dot-regular-margin: rem(4px) !default;
$timeline-inner-dot-large-size: rem(42px) !default;
$timeline-inner-dot-large-margin: rem(5px) !default;

// Directives
// ============================================================

// Ripple animation
$ripple-animation-transition-in: transform 0.25s map-get($transition, fast-out-slow-in),
    opacity 0.1s map-get($transition, fast-out-slow-in) !default;
$ripple-animation-transition-out: opacity 0.3s map-get($transition, fast-out-slow-in) !default;
$ripple-animation-visible-opacity: 0.15 !default;

// Treeview transition
$treeview-transition: 0.2s map-get($transition, linear-out-slow-in) !default;
